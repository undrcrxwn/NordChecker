<prism:PrismApplication x:Class="NordChecker.App"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:local="clr-namespace:NordChecker"
                        xmlns:hc="https://handyorg.github.io/handycontrol"
                        xmlns:vm="clr-namespace:NordChecker.ViewModels"
                        xmlns:events="clr-namespace:Serilog.Events;assembly=Serilog"
                        xmlns:themes="clr-namespace:HandyControl.Themes;assembly=HandyControl"
                        xmlns:System="clr-namespace:System;assembly=mscorlib"
                        xmlns:converters="clr-namespace:NordChecker.Converters"
                        xmlns:xnet="clr-namespace:Leaf.xNet;assembly=Leaf.xNet"
                        xmlns:prism="http://prismlibrary.com/">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml"/>

                <hc:ThemeResources>
                    <hc:ThemeResources.ThemeDictionaries>
                        <ResourceDictionary x:Key="Light" hc:ThemeDictionary.Key="Light">
                            <SolidColorBrush x:Key="DefaultBrush" Color="#f8f8f8" />
                        </ResourceDictionary>

                        <ResourceDictionary x:Key="Dark" hc:ThemeDictionary.Key="Dark">
                            <SolidColorBrush x:Key="RegionBrush" Color="#171717" />
                            <SolidColorBrush x:Key="DefaultBrush" Color="#1b1b1b" />
                            <SolidColorBrush x:Key="BackgroundBrush" Color="#343434" />
                            <SolidColorBrush x:Key="PrimaryTextBrush" Color="#e6e6e6" />
                        </ResourceDictionary>
                    </hc:ThemeResources.ThemeDictionaries>
                </hc:ThemeResources>

                <ResourceDictionary>
                    <ObjectDataProvider x:Key="ProxyTypeEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="xnet:ProxyType"/>
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>

                    <converters:NumberConverter x:Key="NumberConverter"/>
                    <converters:Enum2StringConverter x:Key="Enum2StringConverter"/>
                    <converters:Boolean2VisibilityConverter x:Key="Boolean2VisibilityConverter"/>
                    <converters:Boolean2DataGridHeadersVisibilityConverter x:Key="Boolean2DataGridHeadersVisibilityConverter"/>
                    <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
                    <converters:ApplicationTheme2StringConverter x:Key="ApplicationTheme2StringConverter"/>
                    <converters:TimeSpan2TotalSecondsConverter x:Key="TimeSpan2TotalSecondsConverter"/>

                    <converters:ConverterChain x:Key="InverseBoolean2VisibilityConverter">
                        <converters:InverseBooleanConverter/>
                        <converters:Boolean2VisibilityConverter/>
                    </converters:ConverterChain>

                    <converters:ConverterChain x:Key="InverseBoolean2DataGridHeadersVisibilityConverter">
                        <converters:InverseBooleanConverter/>
                        <converters:Boolean2DataGridHeadersVisibilityConverter/>
                    </converters:ConverterChain>

                    <ObjectDataProvider x:Key="LogEventLevelEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="events:LogEventLevel"/>
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>

                    <ObjectDataProvider x:Key="ApplicationThemeEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="themes:ApplicationTheme"/>
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <!-- SIMPLE TEXT -->
            <Style TargetType="{x:Type hc:SimpleText}">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </Style>

            <!-- DATA GRID CELL -->
            <Style x:Key="DefaultCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- DATA GRID ROW -->
            <Style x:Key="DefaultRowStyle" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DataGridRowStyle}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                        <Setter Property="IsSelected" Value="True"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- TOOL TIP -->
            <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource ToolTipBaseStyle}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="HasDropShadow" Value="True"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToolTip">
                            <Border Name="Border"
					  Background="{DynamicResource DefaultBrush}"
					  BorderBrush="{DynamicResource BorderBrush}"
					  BorderThickness="1"
					  Width="{TemplateBinding Width}"
					  Height="{TemplateBinding Height}">
                                <ContentPresenter
                                    Margin="9,4,9,5"
                                    VerticalAlignment="Top"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="True">
                                    <Setter TargetName="Border" Property="CornerRadius" Value="5"/>
                                    <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- HYPER LINK -->
            <Style TargetType="{x:Type Hyperlink}">
                <Setter Property="ForceCursor" Value="True" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="TextDecorations" Value="{x:Null}" />
            </Style>
            <Style x:Key="HyperLinkDefault">
                <Setter Property="Control.ForceCursor" Value="True" />
                <Setter Property="Control.Cursor" Value="Hand" />
                <Style.Triggers>
                    <Trigger Property="Control.IsMouseOver" Value="True">
                        <Setter Property="Control.Foreground" Value="{DynamicResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- CHECK BOX -->
            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CheckBoxBaseStyle}">
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- FRAME -->
            <Style TargetType="{x:Type Frame}" BasedOn="{StaticResource FrameBaseStyle}">
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="NavigationUIVisibility" Value="Hidden"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</prism:PrismApplication>
