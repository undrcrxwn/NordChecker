<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:NordChecker.ViewModels"
        xmlns:m="clr-namespace:NordChecker.Models"
        xmlns:local="clr-namespace:NordChecker"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:events="clr-namespace:Serilog.Events;assembly=Serilog"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
        x:Class="NordChecker.Views.MainWindow"
        mc:Ignorable="d"
        Title="{Binding Title}"
        Height="630" Width="1050"
        KeyboardNavigation.TabNavigation="None"
        MinWidth="976" MinHeight="600"
        Background="{StaticResource RegionBrush}">
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <vm:NumberConverter x:Key="NumberConverter"/>
        <vm:AccState2StringConverter x:Key="AccState2StringConverter"/>
        <vm:Boolean2VisibilityConverter x:Key="Boolean2VisibilityConverter"/>
        <vm:InverseBooleanConverter x:Key="InverseBooleanConverter"/>

        <ObjectDataProvider x:Key="logEventLevelEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="events:LogEventLevel"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="140"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="550"/>
            <ColumnDefinition Width="260"/>
        </Grid.ColumnDefinitions>

        <Button Content="Начать"     Command="{Binding StartCommand}"    Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource Boolean2VisibilityConverter}}" Height="30" Style="{StaticResource ButtonPrimary}" HorizontalAlignment="Stretch" Margin="10,0,10,0"/>
        <Button Content="Остановить" Command="{Binding PauseCommand}"    Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource Boolean2VisibilityConverter}}" Height="30" Style="{StaticResource ButtonDanger}"  HorizontalAlignment="Stretch" Margin="10,0,10,0"/>
        <Button Content="Продолжить" Command="{Binding ContinueCommand}" Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource Boolean2VisibilityConverter}}" Height="30" Style="{StaticResource ButtonPrimary}" HorizontalAlignment="Stretch" Margin="10,0,10,0"/>

        <StackPanel Grid.Row="1" Orientation="Vertical" Margin="10,0,10,0" VerticalAlignment="Top">
            <Canvas x:Name="progressCanvas" Panel.ZIndex="1" HorizontalAlignment="Stretch" Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}">
                <hc:Arc StrokeStartLineCap="Round" StrokeEndLineCap="Round" Width="{Binding ActualWidth, ElementName=progressCanvas}" Stretch="None" Stroke="#FF9135FF" StrokeThickness="3" Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                        StartAngle = "{Binding Path=Arcs[(m:AccountState)Premium].StartAngle}"
                        EndAngle   = "{Binding Path=Arcs[(m:AccountState)Premium].EndAngle}"
                        Visibility = "{Binding Path=Arcs[(m:AccountState)Premium].Visibility}"/>
                <hc:Arc StrokeStartLineCap="Round" StrokeEndLineCap="Round" Width="{Binding ActualWidth, ElementName=progressCanvas}" Stretch="None" Stroke="{StaticResource PrimaryBrush}" StrokeThickness="3" Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                        StartAngle = "{Binding Path=Arcs[(m:AccountState)Free].StartAngle}"
                        EndAngle   = "{Binding Path=Arcs[(m:AccountState)Free].EndAngle}"
                        Visibility = "{Binding Path=Arcs[(m:AccountState)Free].Visibility}"/>
                <hc:Arc StrokeStartLineCap="Round" StrokeEndLineCap="Round" Width="{Binding ActualWidth, ElementName=progressCanvas}" Stretch="None" Stroke="{StaticResource DangerBrush}" StrokeThickness="3" Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                        StartAngle = "{Binding Path=Arcs[(m:AccountState)Invalid].StartAngle}"
                        EndAngle   = "{Binding Path=Arcs[(m:AccountState)Invalid].EndAngle}"
                        Visibility = "{Binding Path=Arcs[(m:AccountState)Invalid].Visibility}"/>
                <hc:Arc StrokeStartLineCap="Round" StrokeEndLineCap="Round" Width="{Binding ActualWidth, ElementName=progressCanvas}" Stretch="None" Stroke="{StaticResource BorderBrush}" StrokeThickness="3" Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                        StartAngle = "{Binding Path=Arcs[(m:AccountState)Reserved].StartAngle}"
                        EndAngle   = "{Binding Path=Arcs[(m:AccountState)Reserved].EndAngle}"
                        Visibility = "{Binding Path=Arcs[(m:AccountState)Reserved].Visibility}"/>
                <hc:Arc StrokeStartLineCap="Round" StrokeEndLineCap="Round" Width="{Binding ActualWidth, ElementName=progressCanvas}" Stretch="None" Stroke="{StaticResource BackgroundBrush}" StrokeThickness="3" Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                        StartAngle = "{Binding Path=Arcs[(m:AccountState)Unchecked].StartAngle}"
                        EndAngle   = "{Binding Path=Arcs[(m:AccountState)Unchecked].EndAngle}"
                        Visibility = "{Binding Path=Arcs[(m:AccountState)Unchecked].Visibility}"/>
                <Grid Width="{Binding ActualWidth, ElementName=progressCanvas}"
                      Height="{Binding ActualWidth, ElementName=progressCanvas}">
                    <StackPanel VerticalAlignment="Center">
                        <TextBlock Text="{Binding LoadedCount, Converter={StaticResource NumberConverter}}"
                                   HorizontalAlignment="Center"
                                   FontWeight="Medium"
                                   FontSize="24"/>
                        <TextBlock Text="всего"
                                   HorizontalAlignment="Center"
                                   Margin="0,-6,0,0"/>
                    </StackPanel>
                </Grid>
            </Canvas>
        </StackPanel>
        <Grid Grid.Row="2">
            <ScrollViewer>
                <StackPanel Orientation="Vertical" Margin="10,0,10,4">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Height" Value="60"/>
                            <Setter Property="Margin" Value="0,0,0,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </StackPanel.Resources>
                    <Border>
                        <Grid>
                            <hc:SimplePanel VerticalAlignment="Top" Height="23">
                                <hc:SimpleText Text="Премиум" VerticalAlignment="Top" Margin="6,4,0,0"/>
                                <Ellipse HorizontalAlignment="Right" Margin="0,0,8,0" Width="8" Height="8" Fill="#FF9135FF"/>
                            </hc:SimplePanel>
                            <hc:SimpleText Text="{Binding Path=Stats[(m:AccountState)Premium], Converter={StaticResource NumberConverter}}" HorizontalAlignment="Stretch" Height="33" VerticalAlignment="Bottom" FontSize="24" FontWeight="Medium" Margin="6,0,0,0"/>
                        </Grid>
                    </Border>
                    <Border>
                        <Grid>
                            <hc:SimplePanel VerticalAlignment="Top" Height="23">
                                <hc:SimpleText Text="Бесплатных" VerticalAlignment="Top" Margin="6,4,0,0"/>
                                <Ellipse HorizontalAlignment="Right" Margin="0,0,8,0" Width="8" Height="8" Fill="{DynamicResource PrimaryBrush}"/>
                            </hc:SimplePanel>
                            <hc:SimpleText Text="{Binding Path=Stats[(m:AccountState)Free], Converter={StaticResource NumberConverter}}" HorizontalAlignment="Stretch" Height="33" VerticalAlignment="Bottom" FontSize="24" FontWeight="Medium" Margin="6,0,0,0"/>
                        </Grid>
                    </Border>
                    <Border>
                        <Grid>
                            <hc:SimplePanel VerticalAlignment="Top" Height="23">
                                <hc:SimpleText Text="Невалидных" VerticalAlignment="Top" Margin="6,4,0,0"/>
                                <Ellipse HorizontalAlignment="Right" Margin="0,0,8,0" Width="8" Height="8" Fill="{DynamicResource DangerBrush}"/>
                            </hc:SimplePanel>
                            <hc:SimpleText Text="{Binding Path=Stats[(m:AccountState)Invalid], Converter={StaticResource NumberConverter}}" HorizontalAlignment="Stretch" Height="33" VerticalAlignment="Bottom" FontSize="24" FontWeight="Medium" Margin="6,0,0,0"/>
                        </Grid>
                    </Border>
                    <Border>
                        <Grid>
                            <hc:SimplePanel VerticalAlignment="Top" Height="23">
                                <hc:SimpleText Text="В обработке" VerticalAlignment="Top" Margin="6,4,0,0"/>
                                <Ellipse HorizontalAlignment="Right" Margin="0,0,8,0" Width="8" Height="8" Fill="{DynamicResource ThirdlyTextBrush}"/>
                            </hc:SimplePanel>
                            <hc:SimpleText Text="{Binding Path=Stats[(m:AccountState)Reserved], Converter={StaticResource NumberConverter}}" HorizontalAlignment="Stretch" Height="33" VerticalAlignment="Bottom" FontSize="24" FontWeight="Medium" Margin="6,0,0,0"/>
                        </Grid>
                    </Border>
                    <Border>
                        <Grid>
                            <hc:SimplePanel VerticalAlignment="Top" Height="23">
                                <hc:SimpleText Text="В очереди" VerticalAlignment="Top" Margin="6,4,0,0"/>
                                <Ellipse HorizontalAlignment="Right" Margin="0,0,8,0" Width="8" Height="8" Fill="{DynamicResource BorderBrush}"/>
                            </hc:SimplePanel>
                            <hc:SimpleText Text="{Binding Path=Stats[(m:AccountState)Unchecked], Converter={StaticResource NumberConverter}}" HorizontalAlignment="Stretch" Height="33" VerticalAlignment="Bottom" FontSize="24" FontWeight="Medium" Margin="6,0,0,0"/>
                        </Grid>
                    </Border>
                    <Border>
                        <Grid>
                            <hc:SimpleText Text="Битых строк" VerticalAlignment="Top" Margin="6,4,0,0"/>
                            <hc:SimpleText Text="{Binding MismatchedCount, Converter={StaticResource NumberConverter}}" HorizontalAlignment="Stretch" Height="33" VerticalAlignment="Bottom" FontSize="24" FontWeight="Medium" Margin="6,0,0,0"/>
                        </Grid>
                    </Border>
                    <Border Visibility="{Binding Settings.AreComboDuplicatesSkipped, Converter={StaticResource Boolean2VisibilityConverter}}">
                        <Grid>
                            <hc:SimpleText Text="Дубликатов" VerticalAlignment="Top" Margin="6,4,0,0"/>
                            <hc:SimpleText Text="{Binding DuplicatesCount, Converter={StaticResource NumberConverter}}" HorizontalAlignment="Stretch" Height="33" VerticalAlignment="Bottom" FontSize="24" FontWeight="Medium" Margin="6,0,0,0"/>
                        </Grid>
                    </Border>
                </StackPanel>
            </ScrollViewer>
        </Grid>

        <DataGrid x:Name="dgAccounts"
                  Padding="4,4,4,0"
                  RowStyle="{StaticResource DefaultRowStyle}"
                  Grid.Column="1" Grid.Row="1"
                  Grid.ColumnSpan="2" Grid.RowSpan="2"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  VerticalScrollBarVisibility="Auto"
                  BorderBrush="Transparent"
                  Background="{StaticResource DefaultBrush}"
                  MinRowHeight="5"
                  SelectionMode="Single">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Email, UpdateSourceTrigger=PropertyChanged}"    Header="Логин "  IsReadOnly="True" CanUserSort="False"/>
                <DataGridTextColumn Binding="{Binding Password, UpdateSourceTrigger=PropertyChanged}" Header="Пароль " IsReadOnly="True" CanUserSort="False"/>
                <DataGridTemplateColumn Header="Статус " SortMemberPath="State" IsReadOnly="True" CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <emoji:TextBlock Text="{Binding State, Converter={StaticResource AccState2StringConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="5,5,0,0"/>
                </Style>
            </DataGrid.Resources>
        </DataGrid>

        <StackPanel Grid.Column="1" Grid.Row="1"
                    Grid.ColumnSpan="2" Grid.RowSpan="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="0,0,0,20"
                    Visibility="{Binding IsGreetingVisible, Converter={StaticResource Boolean2VisibilityConverter}}">
            <emoji:TextBlock Text="{Binding GreetingTitle}" FontSize="80" Margin="0,0,0,10"  TextAlignment="Center"/>
            <TextBlock Text="NordVPN Checker" FontSize="24" FontWeight="Bold" Margin="0,0,0,2" TextAlignment="Center"/>
            <TextBlock Text="Лицензия действительна до 28.08.2021 13:52" TextAlignment="Center"/>
            <TextBlock Text="Тикет e07fc1f90ae7" TextAlignment="Center"/>
        </StackPanel>

        <TextBlock Height="32" Width="32" HorizontalAlignment="Right" Grid.Column="1" Margin="0,0,10,0" TextAlignment="Center">
            <Hyperlink Command="">
                <emoji:TextBlock Text="☀️🌒🦉" FontSize="18" Margin="0,2.25,0,0" Padding="0,0,0,0"/>
            </Hyperlink>
        </TextBlock>
        
        <hc:ButtonGroup VerticalAlignment="Center" Height="30" Grid.Column="2">
            <ToggleButton x:Name="btnAreUncheckedDisplayed" Content="В очереди"   IsChecked="True" Checked="OnFilteringSettingsUpdated" Unchecked="OnFilteringSettingsUpdated"/>
            <ToggleButton x:Name="btnAreReservedDisplayed"  Content="В обработке" IsChecked="True" Checked="OnFilteringSettingsUpdated" Unchecked="OnFilteringSettingsUpdated"/>
            <ToggleButton x:Name="btnAreInvalidDisplayed"   Content="Невалидные"  IsChecked="True" Checked="OnFilteringSettingsUpdated" Unchecked="OnFilteringSettingsUpdated"/>
            <ToggleButton x:Name="btnAreFreeDisplayed"      Content="Бесплатные"  IsChecked="True" Checked="OnFilteringSettingsUpdated" Unchecked="OnFilteringSettingsUpdated"/>
            <ToggleButton x:Name="btnArePremiumDisplayed"   Content="Премиум"     IsChecked="True" Checked="OnFilteringSettingsUpdated" Unchecked="OnFilteringSettingsUpdated"/>
        </hc:ButtonGroup>
        <Button Grid.Column="3" x:Name="btnExport" Content="Экспорт..." Command="{Binding LoadCombosCommand}" ToolTip="Выгрузка результатов работы в файловую структуру" IsEnabled="{Binding IsPipelineWorking, Converter={StaticResource InverseBooleanConverter}}" Height="30" HorizontalAlignment="Stretch" Margin="10,0,10,0"/>
        <ScrollViewer Grid.Column="3" Grid.Row="1" Grid.RowSpan="2">
            <StackPanel Margin="10,0,10,4">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource ExpanderBaseStyle}">
                        <Setter Property="Margin" Value="0,0,0,6"/>
                    </Style>
                </StackPanel.Resources>
                <Expander Header="База" IsExpanded="True" BorderBrush="{DynamicResource BorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top" FontWeight="Normal" FontStyle="Normal" Background="{x:Null}">
                    <Border CornerRadius="0,0,5,5" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1,0,1,1">
                        <hc:UniformSpacingPanel Orientation="Vertical" Spacing="10" Margin="4,-6,4,4">
                            <TextBlock Height="0" Margin="0,0,1000,0"/>
                            <StackPanel>
                                <TextBlock Text="L:P пары NordVPN" Margin="2,0,0,4"/>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Content="Загрузить" Command="{Binding LoadCombosCommand}" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch"/>
                                    <Button Content="Очистить" Command="{Binding ClearComboCommand}" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch"/>
                                </Grid>
                            </StackPanel>
                            <StackPanel Margin="0,0,0,5" Visibility="{Binding Settings.IsDeveloperModeEnabled, Converter={StaticResource Boolean2VisibilityConverter}}">
                                <TextBlock Text="RegExp маска" Margin="2,0,0,4"/>
                                <TextBox IsEnabled="{Binding IsPipelineWorking, Converter={StaticResource InverseBooleanConverter}}"
                                         ToolTip="Регулярное выражение, применяемое к каждой строке загружаемой базы NordVPN.
&#10;Ожидаемые группы захвата:
&#10;– Groups[0] – полное совпадение;
&#10;– Groups[1] – почтовый адрес;
&#10;– Groups[2] – пароль.
&#10;Для тестирования пользовательских масок посетите https://regex101.com/" FontFamily="Consolas" Margin="0,0,0,4" />
                            </StackPanel>
                            <hc:UniformSpacingPanel Orientation="Vertical" Spacing="5" Margin="0,-15,0,0">
                                <CheckBox Content="Нормализация строк" ToolTip="Замена взаимозаменяемых спец. символов на предпочтительные (например ; на : и т. д.)" IsChecked="True" HorizontalAlignment="Left"/>
                                <CheckBox Content="Не загружать дубликаты" IsChecked="{Binding Settings.AreComboDuplicatesSkipped}" HorizontalAlignment="Left"/>
                            </hc:UniformSpacingPanel>
                        </hc:UniformSpacingPanel>
                    </Border>
                </Expander>
                <Expander Header="Прокси" BorderBrush="{StaticResource BorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top" FontWeight="Normal" FontStyle="Normal" Background="{x:Null}">
                    <Border CornerRadius="0,0,5,5" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1,0,1,1">
                        <hc:UniformSpacingPanel Orientation="Vertical" Spacing="10" Margin="4,-6,4,4">
                            <TextBlock Height="0" Margin="0,0,1000,0"/>
                            <StackPanel>
                                <TextBlock Text="HTTP, HTTPS, Socks4, Socks5" Margin="2,0,0,4"/>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Content="Загрузить" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch"/>
                                    <Button IsEnabled="{Binding IsPipelineWorking, Converter={StaticResource InverseBooleanConverter}}" Content="Очистить" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch"/>
                                </Grid>
                            </StackPanel>
                            <StackPanel Margin="0,0,0,5" Visibility="{Binding Settings.IsDeveloperModeEnabled, Converter={StaticResource Boolean2VisibilityConverter}}">
                                <TextBlock Text="RegExp маска" Margin="2,0,0,4"/>
                                <TextBox IsEnabled="{Binding IsPipelineWorking, Converter={StaticResource InverseBooleanConverter}}"
                                         ToolTip="Регулярное выражение, применяемое к каждой строке загружаемой базы прокси.
&#10;Ожидаемые группы захвата:
&#10;– Groups[0] – полное совпадение;
&#10;– Groups[1] – IP-адрес;
&#10;– Groups[2] – порт.
&#10;Для тестирования пользовательских масок посетите https://regex101.com/" FontFamily="Consolas" Margin="0,0,0,4" />
                            </StackPanel>
                            <hc:UniformSpacingPanel Orientation="Vertical" Spacing="5" Margin="0,-15,0,0">
                                <CheckBox Content="Нормализация строк" ToolTip="Замена взаимозаменяемых спец. символов на предпочтительные (например ; на : и т. д.)" IsChecked="True" HorizontalAlignment="Left"/>
                            </hc:UniformSpacingPanel>
                        </hc:UniformSpacingPanel>
                    </Border>
                </Expander>
                <Expander Header="Автоматизация" IsExpanded="True" BorderBrush="{DynamicResource BorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top" FontWeight="Normal" FontStyle="Normal" Background="{x:Null}">
                    <Border CornerRadius="0,0,5,5" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1,0,1,1">
                        <hc:UniformSpacingPanel Orientation="Vertical" Spacing="5" Margin="4,-1,4,4">
                            <TextBlock Height="0" Margin="0,0,1000,0"/>
                            <CheckBox Content="Визуальное уведомление" IsChecked="True" ToolTip="Показать на экране уведомление Windows с краткой статистикой по завершении обработки базы&#10;при условии, что окно приложения свёрнуто" HorizontalAlignment="Left"/>
                            <CheckBox Content="Звуковое уведомление" IsChecked="True" ToolTip="Проиграть звуковой сигнал по завершении обработки базы" HorizontalAlignment="Left"/>
                            <CheckBox Content="Завершение работы ПК" ToolTip="Выключить ПК по завершении обработки базы. Завершение работы ПК можно отменить через&#10;диалоговое окно, которое будет доступно в течение 15 секунд до выключения" HorizontalAlignment="Left"/>
                        </hc:UniformSpacingPanel>
                    </Border>
                </Expander>
                <Expander Header="Параметры" IsExpanded="False" BorderBrush="{DynamicResource BorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top" FontWeight="Normal" FontStyle="Normal" Background="{x:Null}">
                    <Border CornerRadius="0,0,5,5" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1,0,1,1">
                        <hc:UniformSpacingPanel Orientation="Vertical" Spacing="10" Margin="4,-6,4,4">
                            <TextBlock Height="0" Margin="0,0,1000,0"/>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="4"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="4"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Потоки" Margin="4,0,0,0" VerticalAlignment="Center"/>
                                <hc:NumericUpDown IsEnabled="{Binding IsPipelineWorking, Converter={StaticResource InverseBooleanConverter}}" Value="{Binding Settings.ThreadCount}" Minimum="1" Maximum="5000" Grid.Column="2" Increment="50"/>
                                <TextBlock Text="Таймаут (сек.)" Margin="4,0,0,0" VerticalAlignment="Center" Grid.Row="4"/>
                                <hc:NumericUpDown IsEnabled="{Binding IsPipelineWorking, Converter={StaticResource InverseBooleanConverter}}" Value="15" Minimum="5" Maximum="30" Grid.Row="4" Grid.Column="2" Increment="5"/>
                            </Grid>
                            <hc:UniformSpacingPanel Orientation="Vertical" Spacing="5">
                                <CheckBox Content="Поверх всех окон" HorizontalAlignment="Left"/>
                                <CheckBox Content="Сворачивать в трей" ToolTip="Сворачивать окно в трей при потери фокуса" HorizontalAlignment="Left"/>
                                <CheckBox Content="Режим разработчика" IsChecked="{Binding Settings.IsDeveloperModeEnabled}" HorizontalAlignment="Left"/>
                                <CheckBox Content="Показывать логи" IsChecked="{Binding Settings.IsConsoleLoggingEnabled}" Visibility="{Binding Settings.IsDeveloperModeEnabled, Converter={StaticResource Boolean2VisibilityConverter}}" HorizontalAlignment="Left"/>
                            </hc:UniformSpacingPanel>
                            <Grid Margin="0,0,0,10" Visibility="{Binding Settings.IsDeveloperModeEnabled, Converter={StaticResource Boolean2VisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="4"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="LogEventLevel" Margin="4,0,0,0" VerticalAlignment="Center"/>
                                <hc:ComboBox ItemsSource="{Binding Source={StaticResource logEventLevelEnumValues}}" SelectedValue="{Binding Settings.LogEventLevel}" Grid.Column="2"/>
                            </Grid>
                            <StackPanel Margin="2,-10,0,2">
                                <TextBlock Text="По всем вопросам и предложениям" Margin="2,0,0,0"/>
                                <TextBlock Grid.Row="1" Grid.ColumnSpan="3">
                                    <Hyperlink Command="{Binding ContactAuthorCommand}" FontWeight="Normal" FontStyle="Normal" Foreground="{DynamicResource PrimaryTextBrush}">
                                        <emoji:TextBlock Style="{StaticResource HyperLinkDefault}" Text="👽 t.me/undrcrxwn"/>
                                    </Hyperlink>
                                </TextBlock>
                            </StackPanel>
                        </hc:UniformSpacingPanel>
                    </Border>
                </Expander>
                <Expander Header="Конфигурация" IsExpanded="False" BorderBrush="{DynamicResource BorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top" FontWeight="Normal" FontStyle="Normal" Background="{x:Null}">
                    <Border CornerRadius="0,0,5,5" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1,0,1,1">
                        <hc:UniformSpacingPanel Orientation="Vertical" Spacing="10" Margin="4,-6,4,4">
                            <TextBlock Height="0" Margin="0,0,1000,0"/>
                            <hc:UniformSpacingPanel Orientation="Vertical" Spacing="5" HorizontalAlignment="Stretch">
                                <CheckBox Content="Автосохранение параметров" HorizontalAlignment="Left"/>
                                <Button Content="Восстановить начальные параметры" Width="230"/>
                            </hc:UniformSpacingPanel>
                        </hc:UniformSpacingPanel>
                    </Border>
                </Expander>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Window>
